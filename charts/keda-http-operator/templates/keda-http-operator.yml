apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    httpscaledobjects.http.keda.sh/version: ${{ .Values.version }}
    keda.sh/addon: keda-http-addon
  name: keda-http-addon-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  labels:
    httpscaledobjects.http.keda.sh/version: ${{ .Values.version }}
    keda.sh/addon: keda-http-addon
  name: httpscaledobjects.http.keda.sh
spec:
  group: http.keda.sh
  names:
    kind: HTTPScaledObject
    listKind: HTTPScaledObjectList
    plural: httpscaledobjects
    singular: httpscaledobject
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: HTTPScaledObject is the Schema for the scaledobjects API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: HTTPScaledObjectSpec defines the desired state of HTTPScaledObject
          properties:
            app_image:
              description: The image this application will use.
              type: string
            app_name:
              description: (optional) The name of the application to be created.
              type: string
            polling_interval:
              description: (optional) The interval to check for changes.
              format: int32
              type: integer
            port:
              description: The port this application will serve on.
              format: int32
              type: integer
          required:
          - app_image
          - port
          type: object
        status:
          description: HTTPScaledObjectStatus defines the observed state of HTTPScaledObject
          properties:
            deployment_status:
              description: HTTPScaledObjectCreationStatus describes the creation status of the scaler's additional resources such as Services, Ingresses and Deployments
              enum:
              - Created
              - Error
              - Pending
              - Unknown
              type: string
            ready:
              type: boolean
            scaledobject_status:
              description: HTTPScaledObjectCreationStatus describes the creation status of the scaler's additional resources such as Services, Ingresses and Deployments
              enum:
              - Created
              - Error
              - Pending
              - Unknown
              type: string
            service_status:
              description: HTTPScaledObjectCreationStatus describes the creation status of the scaler's additional resources such as Services, Ingresses and Deployments
              enum:
              - Created
              - Error
              - Pending
              - Unknown
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    httpscaledobjects.http.keda.sh/version: ${{ .Values.version }}
    keda.sh/addon: keda-http-addon
  name: keda-http-addon-leader-election-role
  namespace: keda-http-addon-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    httpscaledobjects.http.keda.sh/version: ${{ .Values.version }}
    keda.sh/addon: keda-http-addon
  name: keda-http-addon-keda-http-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - watch
- apiGroups:
  - http.keda.sh
  resources:
  - scaledobjects
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - http.keda.sh
  resources:
  - scaledobjects/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    httpscaledobjects.http.keda.sh/version: ${{ .Values.version }}
    keda.sh/addon: keda-http-addon
  name: keda-http-addon-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    httpscaledobjects.http.keda.sh/version: ${{ .Values.version }}
    keda.sh/addon: keda-http-addon
  name: keda-http-addon-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    httpscaledobjects.http.keda.sh/version: ${{ .Values.version }}
    keda.sh/addon: keda-http-addon
  name: keda-http-addon-leader-election-rolebinding
  namespace: keda-http-addon-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: keda-http-addon-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: keda-http-addon-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    httpscaledobjects.http.keda.sh/version: ${{ .Values.version }}
    keda.sh/addon: keda-http-addon
  name: keda-http-addon-keda-http-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keda-http-addon-keda-http-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: keda-http-addon-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    httpscaledobjects.http.keda.sh/version: ${{ .Values.version }}
    keda.sh/addon: keda-http-addon
  name: keda-http-addon-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keda-http-addon-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: keda-http-addon-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
    httpscaledobjects.http.keda.sh/version: ${{ .Values.version }}
    keda.sh/addon: keda-http-addon
  name: keda-http-addon-controller-manager-metrics-service
  namespace: keda-http-addon-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
    httpscaledobjects.http.keda.sh/version: ${{ .Values.version }}
    keda.sh/addon: keda-http-addon
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
    httpscaledobjects.http.keda.sh/version: ${{ .Values.version }}
    keda.sh/addon: keda-http-addon
  name: keda-http-addon-controller-manager
  namespace: keda-http-addon-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      httpscaledobjects.http.keda.sh/version: ${{ .Values.version }}
      keda.sh/addon: keda-http-addon
  template:
    metadata:
      labels:
        control-plane: controller-manager
        httpscaledobjects.http.keda.sh/version: ${{ .Values.version }}
        keda.sh/addon: keda-http-addon
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        env:
        - name: KEDA_HTTP_EXTERNAL_SCALER_ADDR
          value: ${{ required "The external scaler address must be set" .Values.kedaHttpExternalScalerAddress | quote }}
        image: keda-http-addon-controller:latest
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      terminationGracePeriodSeconds: 10
